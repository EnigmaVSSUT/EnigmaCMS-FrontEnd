name: Build and Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Install Dependencies
        run: npm install --force

      - name: Build Vite Project
        run: npm run build

      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/  # Change this path to the build output directory

  Deploy-Staging:
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Preview
      url: "https://enigma-web-preview.web.app"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install Vite
        run: npm install -g vite

      - name: Restore Build
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Find Vite Binary Path
        run: which vite


      - name: Set Environment Variables Staging
        run: echo "FIREBASE_PROJECT_ID=${{ secrets.PREVIEW }}" >> $GITHUB_ENV

      - name: Deploy to Firebase (Staging)
        run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }} --only hosting --project ${{ env.FIREBASE_PROJECT_ID }}

  Deploy-Production:
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: "https://enigma-dev-web.web.app"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install Vite
        run: npm install -g vite

      - name: Restore Build
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Set Environment Variables for Production
        run: echo "FIREBASE_PROJECT_ID=${{ secrets.PRODUCTION }}" >> $GITHUB_ENV

      - name: Deploy to Firebase (Production)
        run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }} --only hosting --project ${{ env.FIREBASE_PROJECT_ID }}
